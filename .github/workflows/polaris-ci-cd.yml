name: Polaris CI/CD

on:
  push:
    branches:
      - "feature/*"
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  test-lint-polaris-api:
    name: 🚀 Tests and Linter - Polaris API
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v4

      - name: 💾 Cache de dependências do pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 🐍 Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: 📦 Instalar dependências
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: ./polaris_api

      - name: 🎨 Rodar Linter
        run: |
          source venv/bin/activate
          black --check ./polaris_api

      - name: 🧪 Executar Testes
        run: |
          source venv/bin/activate
          PYTHONPATH=./ pytest tests/test_polaris_api.py --maxfail=1 --disable-warnings

  test-lint-polaris-telegram:
    name: 🚀 Tests and Linter - Polaris Telegram
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v4

      - name: 💾 Cache de dependências do pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 🐍 Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: 📦 Instalar dependências
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: ./telegram_bot

      - name: 🎨 Rodar Linter
        run: |
          source venv/bin/activate
          black --check ./telegram_bot

      - name: 🧪 Executar Testes
        run: |
          source venv/bin/activate
          PYTHONPATH=./ pytest tests/test_telegram_bot.py --maxfail=1 --disable-warnings

  create-pr:
    name: 🔀 Criar PR para Main
    needs: [test-lint-polaris-api, test-lint-polaris-telegram]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref_name, 'feature/')
    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v4

      - name: 🔀 Criar Pull Request para `main`
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_PAT }}  # Usando o Personal Access Token (PAT)
          base: main
          branch: ${{ github.ref }}
          title: "🚀 Merge automático de ${{ github.ref_name }} para main"
          body: |
            **Descrição:**
            Este PR foi criado automaticamente a partir da branch `${{ github.ref_name }}`.
            Verifique os testes antes de aprovar o merge.
          labels: "automated-pr"